// <auto-generated />
using DetonaRalph_CRUD.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DetonaRalph_CRUD.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DetonaRalph_CRUD.Models.Cenario", b =>
                {
                    b.Property<int>("CenarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCenario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pathImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CenarioID");

                    b.ToTable("Cenarios");
                });

            modelBuilder.Entity("DetonaRalph_CRUD.Models.Personagem", b =>
                {
                    b.Property<int>("PersonagemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CenarioID")
                        .HasColumnType("int");

                    b.Property<string>("NomePersonagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonagemID");

                    b.HasIndex("CenarioID");

                    b.ToTable("Personagens");
                });

            modelBuilder.Entity("DetonaRalph_CRUD.Models.Personagem", b =>
                {
                    b.HasOne("DetonaRalph_CRUD.Models.Cenario", "Cenario")
                        .WithMany()
                        .HasForeignKey("CenarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cenario");
                });
#pragma warning restore 612, 618
        }
    }
}
